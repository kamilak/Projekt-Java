package Wypozyczalnia;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
/**
 * W GUI natsepuje połączenie z bazą danych. funkcjafilm() wyświetla zwartość 
 * comboboxa z filmami,  funkcjaklient() wyświetla zawartość comboxa z klientami,
 * aktaulizujaktualizujFilmy() aktualizuje combobox z zawartością filmów.
 * @author Kamila
 */
public class WypozyczalniaGUI extends javax.swing.JFrame{

    public WypozyczalniaGUI() {
        try {
            Class.forName("org.sqlite.JDBC");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

            try {
                connection = DriverManager.getConnection("jdbc:sqlite:baza.db");              
           
                Statement statement = connection.createStatement();
                statement.setQueryTimeout(5);
                statement.executeUpdate("create table if not exists filmy (id integer primary key autoincrement, nazwa text not null, cena float not null, rokwydania integer not null, gatunek text not null, rezyser text not null, wiek integer not null, dostepne text not null )");
                statement.executeUpdate("create table if not exists klienci (id integer primary key autoincrement, nazwisko text not null, imie text not null,  adres text not null, numer integer not null )");
                statement.executeUpdate("create table if not exists wypozyczenia (idwyp integer primary key autoincrement, idfilm integer not null, idklient integer not null, datawyp date not null, nazwafilm text not null, datazwrot date not null, foreign key(idfilm) references filmy(id), foreign key(idklient) references klienci(id), foreign key(nazwafilm) references filmy(nazwa))");
                statement.executeUpdate("create table if not exists zwroty1 (idwyp integer primary key, idkl integer not null, nazwa text not null, datazwrot date not null, foreign key(idwyp) references wypozyczenia(idwyp), foreign key(nazwa) references wypozyczenia(nazwa), foreign key(idkl) references wypozyczenia(idklient) )");
            } catch (SQLException ex) {
                Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    Connection connection = null;
    private List<Film> filmy = new ArrayList<Film>();
    private List<Klient> klienci = new ArrayList<Klient>();
    private Map<Klient,List<Wypozyczenie>> wypozyczeniaklienta = new HashMap<Klient, List<Wypozyczenie>>();
    private Map<Klient, List<Zwrot>> zwroty = new HashMap<Klient, List<Zwrot>>();
    
   public void funkcjafilm(){
        try {
                    Statement statement = connection.createStatement();
                    ResultSet rs = statement.executeQuery("SELECT id, nazwa, cena, rokwydania, gatunek, rezyser, wiek, dostepne FROM filmy");
                    while (rs.next())
                    {
                        int id1 = rs.getInt("id");
                        String nazwa1 =  rs.getString("nazwa");
                        float c1 = rs.getFloat("cena");
                        int r1 = rs.getInt("rokwydania");
                        String gatunek1 = rs.getString("gatunek");
                        String rezyser1 = rs.getString("rezyser");
                        int w1 = rs.getInt("wiek");
                        String dostepne1 = rs.getString("dostepne");
                        FilmyCombo.addItem("Id: " + id1 + " Nazwa: " + nazwa1 + " Cena wyp: " + c1 + "zl. Dostepne: " + dostepne1);
                        Film film = new Film(id1, nazwa1, c1, r1, gatunek1, rezyser1, w1, dostepne1);
                        filmy.add(film);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
   
    public void funkcjaklient(){
        try {
                    Statement statement = connection.createStatement();
                    ResultSet rs = statement.executeQuery("SELECT id, nazwisko, imie, adres, numer FROM klienci");
                    while (rs.next())
                    {
                        int id=rs.getInt("id");
                        String nazwisko =  rs.getString("nazwisko");
                        String imie = rs.getString("imie");
                        String adres = rs.getString("adres");
                        int nr = rs.getInt("numer");
                        KlienciCombo.addItem(id + " " + nazwisko + " " + imie + " " + adres + " " + nr);
                        Klient klient = new Klient(id, nazwisko, imie, adres, nr);
                        klienci.add(klient);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Film = new javax.swing.JPanel();
        RokWpisz = new javax.swing.JTextField();
        WiekWpisz = new javax.swing.JTextField();
        DodajFilm = new javax.swing.JButton();
        GatunekWpisz = new javax.swing.JTextField();
        RezyserWpisz = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FilmyCombo = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dostepneWpisz = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CenaWpisz = new javax.swing.JTextField();
        NazwaWpisz = new javax.swing.JTextField();
        textField2 = new java.awt.TextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        KlienciCombo = new javax.swing.JComboBox();
        TelefonWpisz = new javax.swing.JTextField();
        ImieWpisz = new javax.swing.JTextField();
        AdresWpisz = new javax.swing.JTextField();
        DodajKLienta = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        NazwiskoWpisz = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        DataZWpisz = new javax.swing.JTextField();
        DodajZwrot = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListaZwroty = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        DataWWpisz = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaWypozyczenia = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        DodajWypozyczenie = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        textField1 = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Film.setBackground(new java.awt.Color(204, 204, 204));
        Film.setBorder(javax.swing.BorderFactory.createTitledBorder("Film"));

        DodajFilm.setText("Dodaj film");
        DodajFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodajFilmActionPerformed(evt);
            }
        });

        jLabel2.setText("Dostepnosc");

        jLabel1.setText("Filmy");

        jLabel11.setText("Wiek widza");

        jLabel10.setText("Rezyser");

        jLabel7.setText("Cena ");

        jLabel6.setText("Nazwa");

        jLabel9.setText("Gatunek");

        jLabel8.setText("Rok wydania");

        textField2.setText("textField2");
        textField2.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                textField2TextValueChanged(evt);
            }
        });

        javax.swing.GroupLayout FilmLayout = new javax.swing.GroupLayout(Film);
        Film.setLayout(FilmLayout);
        FilmLayout.setHorizontalGroup(
            FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilmLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FilmLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DodajFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilmLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(FilmLayout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(RokWpisz))
                                .addGroup(FilmLayout.createSequentialGroup()
                                    .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(NazwaWpisz)
                                        .addComponent(CenaWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(FilmLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dostepneWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(FilmLayout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(WiekWpisz))
                                .addGroup(FilmLayout.createSequentialGroup()
                                    .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(RezyserWpisz)
                                        .addComponent(GatunekWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(FilmyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        FilmLayout.setVerticalGroup(
            FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilmLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NazwaWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FilmLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CenaWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RokWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GatunekWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RezyserWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(WiekWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dostepneWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilmLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(FilmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilmLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(FilmyCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FilmLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(DodajFilm)
                                .addContainerGap(39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(FilmLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Klient"));
        jPanel2.setName(""); // NOI18N

        jLabel16.setText("Imie");

        KlienciCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                KlienciComboItemStateChanged(evt);
            }
        });

        DodajKLienta.setText("Dodaj Klienta");
        DodajKLienta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodajKLientaActionPerformed(evt);
            }
        });

        jLabel3.setText("Klienci");

        jLabel17.setText("Nazwisko");

        jLabel15.setText("Adres");

        jLabel14.setText("Numer telefonu");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(KlienciCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DodajKLienta))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NazwiskoWpisz))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TelefonWpisz))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AdresWpisz)
                            .addComponent(ImieWpisz)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 379, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(NazwiskoWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(ImieWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(AdresWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(TelefonWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(DodajKLienta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(KlienciCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Zwroty wybranego klienta"));

        jLabel20.setText("Data zwrotu");

        DataZWpisz.setText("yyyy-mm-dd");

        DodajZwrot.setText("Dodaj zwrot");
        DodajZwrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodajZwrotActionPerformed(evt);
            }
        });

        ListaZwroty.setVerifyInputWhenFocusTarget(false);
        jScrollPane5.setViewportView(ListaZwroty);

        jLabel5.setText("Zwroty");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DataZWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(DodajZwrot, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 232, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(DataZWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(DodajZwrot)
                        .addGap(0, 32, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Wypożyczenia wybranego klienta"));

        DataWWpisz.setText("yyyy-mm-dd");

        jLabel19.setText("Data wypozyczenia");

        jScrollPane4.setViewportView(ListaWypozyczenia);

        jLabel4.setText("Wypozyczenia");

        DodajWypozyczenie.setText("Dodaj wypozyczenie");
        DodajWypozyczenie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodajWypozyczenieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DataWWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(DodajWypozyczenie)))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DataWWpisz, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(DodajWypozyczenie)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Klienci, którzy przekroczyli czas wypozyczenia"));

        textField1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Film, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(539, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Film, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(81, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void aktualizujFilmy(){
        FilmyCombo.removeAllItems();
        for(Film f:filmy){
            FilmyCombo.addItem("Id: " + f.getId() + " Nazwa: " + f.getNazwa() + " Cena wyp: " + f.getCena() + "zl. Dostepne: " + f.getDostepne());
        }
    }
    
    private void DodajFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodajFilmActionPerformed
        String nazwa =  NazwaWpisz.getText();
        String cena = CenaWpisz.getText();
        float c = Float.parseFloat(cena);
        String rokwydania = RokWpisz.getText();
        int r = Integer.parseInt(rokwydania);
        String gatunek = GatunekWpisz.getText();
        String rezyser = RezyserWpisz.getText();
        String wiek = WiekWpisz.getText();
        int w = Integer.parseInt(wiek);
        String dostepne = dostepneWpisz.getText();
        String sql = "Insert into filmy (nazwa, cena, rokwydania, gatunek, rezyser, wiek, dostepne) Values(?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement ps;
        try {
            ps = connection.prepareStatement(sql);
            ps.setString(1, nazwa);
            ps.setFloat(2, c);
            ps.setInt(3, r);
            ps.setString(4, gatunek);
            ps.setString(5, rezyser);
            ps.setInt(6, w);
            ps.setString(7, dostepne);
            ps.executeUpdate();
            FilmyCombo.removeAllItems();
            funkcjafilm();
        } catch (SQLException ex) {
            Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DodajFilmActionPerformed

    private void KlienciComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_KlienciComboItemStateChanged
        String sql = "SELECT idwyp, idfilm, datawyp, nazwafilm, datazwrot FROM wypozyczenia WHERE idklient = ? ";
        try {
            ListaWypozyczenia.setToolTipText(" ");
            PreparedStatement statement = connection.prepareStatement(sql);
            int indeks = KlienciCombo.getSelectedIndex();
            if ((indeks>0)&&(KlienciCombo.getItemCount()>indeks))
            {
                Klient klient = klienci.get(indeks);
                int id = klient.getId();
                statement.setInt(1, id);

                ResultSet rs = statement.executeQuery();
                List<Wypozyczenie> wypozyczenieKlienta  = new ArrayList<Wypozyczenie>();
                
                while (rs.next())
                        {
                            String nazwa=rs.getString("nazwafilm");
                            Date data = rs.getDate("datawyp");
                            int idw = rs.getInt("idwyp");
                            Date datazwrot = rs.getDate("datazwrot") ;
                            int idFilm = rs.getInt("idfilm");
                            Wypozyczenie wyp = new Wypozyczenie(idw, idFilm, nazwa, data, datazwrot);
                            wypozyczenieKlienta.add(wyp);
                        }
                DefaultListModel model = new DefaultListModel();
                for(Wypozyczenie p : wypozyczenieKlienta) {
                        model.addElement(p.getFilm() + " " + p.getDatawyp());
                }
                ListaWypozyczenia.setModel(model);
                wypozyczeniaklienta.put(klient, wypozyczenieKlienta);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        String sql1 = "SELECT idwyp, nazwa, datazwrot FROM zwroty1 WHERE idkl = ? ";
        try {
            ListaZwroty.setToolTipText(" ");
            PreparedStatement statement = connection.prepareStatement(sql1);
            int indeks = KlienciCombo.getSelectedIndex();
            if ((indeks>0)&&(KlienciCombo.getItemCount()>indeks))
            {
                Klient klient = klienci.get(indeks);
                int id = klient.getId();
                statement.setInt(1, id);

                ResultSet rs = statement.executeQuery();
                List<Zwrot> zwrotyKlienta  = new ArrayList<Zwrot>();
                
                while (rs.next())
                        {
                            String nazwa=rs.getString("nazwa");
                            Date data = rs.getDate("datazwrot");
                            int idw = rs.getInt("idwyp");
                            Zwrot zw = new Zwrot(idw, 0, nazwa, null, null,  data);
                            zwrotyKlienta.add(zw);
                        }
                DefaultListModel model = new DefaultListModel();
                for(Zwrot p : zwrotyKlienta) {
                        model.addElement(p.getFilm() + " " + p.getDatazwrotklienta());
                }
                ListaZwroty.setModel(model);
                zwroty.put(klient, zwrotyKlienta);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_KlienciComboItemStateChanged

    private void DodajKLientaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodajKLientaActionPerformed
        String imie =  ImieWpisz.getText();
        String nazwisko = NazwiskoWpisz.getText();
        String adres = AdresWpisz.getText();
        String nr = TelefonWpisz.getText();
        int nr1 = Integer.parseInt(nr);
        String sql = "Insert into klienci ( nazwisko, imie,  adres, numer) Values(?, ?, ?, ?)";
        PreparedStatement ps;
        try {
            ps = connection.prepareStatement(sql);
            ps.setString(1, nazwisko);
            ps.setString(2, imie);
            ps.setString(3, adres);
            ps.setInt(4, nr1);
            ps.executeUpdate();
            KlienciCombo.removeAllItems();
            funkcjaklient();
        } catch (SQLException ex) {
            Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DodajKLientaActionPerformed

    private void DodajZwrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodajZwrotActionPerformed
        String sql = "INSERT INTO zwroty1 (idwyp, nazwa, idkl, datazwrot) VALUES(?, ?, ?, ?)";
        try {
            PreparedStatement statement = connection.prepareStatement(sql);
            int indeksw = ListaWypozyczenia.getSelectedIndex();
            int indeksk = KlienciCombo.getSelectedIndex();
            Klient klient = klienci.get(indeksk);
            Wypozyczenie wyp = wypozyczeniaklienta.get(klient).get(indeksw);
            String data = DataZWpisz.getText();
            Date d = null;
            SimpleDateFormat parserSDF=new SimpleDateFormat("yyyy-MM-dd");
            try {
                d =  parserSDF.parse(data);
            } catch (ParseException ex) {
                Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            statement.setInt(1, wyp.getId());
            statement.setString(2, wyp.getFilm());
            statement.setInt(3, klient.getId());
            java.sql.Date sqlDate = new java.sql.Date(d.getTime());
            statement.setDate(4, sqlDate);
            statement.executeUpdate();

            DefaultListModel model = new DefaultListModel();
            model.addElement(wyp.getFilm() + " " + parserSDF.format(d));
            ListaZwroty.setModel(model);
            String dost="Tak";
            String sql1 = "UPDATE filmy SET dostepne = 'Tak' WHERE id = (?)";
            PreparedStatement statement1 = connection.prepareStatement(sql1);
            statement1.setInt(1, wyp.getIdFilm());
            statement1.executeUpdate();
            for(Film f : filmy){
                if(f.getId() == wyp.idFilm){
                    f.setDOstepne(dost);
                }
            }
            aktualizujFilmy();
            } catch (SQLException ex) {
                ex.printStackTrace();
        }
    }//GEN-LAST:event_DodajZwrotActionPerformed

    private void DodajWypozyczenieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodajWypozyczenieActionPerformed
        String sql = "INSERT INTO wypozyczenia (idfilm, idklient, datawyp, nazwafilm, datazwrot) VALUES(?, ?, ?, ?, ?)";
        try {
            PreparedStatement statement = connection.prepareStatement(sql);
            int indeks1 = FilmyCombo.getSelectedIndex();
            int indeks2 = KlienciCombo.getSelectedIndex();
            Klient klient = klienci.get(indeks2);
            Film film = filmy.get(indeks1);
            String data = DataWWpisz.getText();
            Date d = null;
            SimpleDateFormat parserSDF=new SimpleDateFormat("yyyy-MM-dd");
            if("Tak".equals(film.getDostepne())){
                try {
                    d =  parserSDF.parse(data);
                } catch (ParseException ex) {
                    Logger.getLogger(WypozyczalniaGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                statement.setInt(1, film.getId());
                statement.setInt(2, klient.getId());
                java.sql.Date sqlDate = new java.sql.Date(d.getTime());
                statement.setDate(3, sqlDate);
                statement.setString(4, film.getNazwa());   
                long dz = d.getTime()+ 2*60*60*24*1000;
                java.sql.Date sqlDate1 = new java.sql.Date(dz);
                statement.setDate(5, sqlDate1);
                statement.executeUpdate();

                DefaultListModel model = new DefaultListModel();
                model.addElement(film.getNazwa() + " " + parserSDF.format(d));
                ListaWypozyczenia.setModel(model);
                String dost="Nie";
                film.setDOstepne(dost);
                String sql1 = "UPDATE filmy SET dostepne = 'Nie' WHERE id = (?)";
                PreparedStatement statement1 = connection.prepareStatement(sql1);
                statement1.setInt(1, film.getId());
                statement1.executeUpdate();
                aktualizujFilmy();
            }
            else{
                JOptionPane.showMessageDialog(null, "Film wypozyczony!");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_DodajWypozyczenieActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        funkcjafilm();
        funkcjaklient();
        Map<Klient,List<Wypozyczenie>> wypk = new HashMap<Klient, List<Wypozyczenie>>();
        int n = klienci.size(); 
        for(Klient k : klienci){
            String sql = "SELECT idwyp, idfilm, datawyp, nazwafilm, datazwrot FROM wypozyczenia WHERE idklient = ? ";
            try {
                PreparedStatement statement = connection.prepareStatement(sql);
                int id = k.getId();
                statement.setInt(1, id);
                ResultSet rs = statement.executeQuery();
                List<Wypozyczenie> wypozyczenieKlienta  = new ArrayList<Wypozyczenie>();
                while (rs.next())
                    {
                        String nazwa=rs.getString("nazwafilm");
                        Date data = rs.getDate("datawyp");
                        int idw = rs.getInt("idwyp");
                        Date datazwrot = rs.getDate("datazwrot") ;
                        int idFilm = rs.getInt("idfilm");
                        Wypozyczenie wyp = new Wypozyczenie(idw, idFilm, nazwa, data, datazwrot);
                        wypozyczenieKlienta.add(wyp);
                  }
                wypk.put(k, wypozyczenieKlienta);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }    
        }
        Thread  Przekroczony = new PrzekroczonyCzasWyp(klienci, wypk, filmy, textField1);
        Przekroczony.start();
  
          }//GEN-LAST:event_formWindowOpened

    private void textField2TextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_textField2TextValueChanged
       String s = textField2.getText();
       int indeks=1;
       int result;
       
       for(int i=1; i<=filmy.size(); i++){
           if (s.startsWith(filmy.get(i).getNazwa(),0)){
 
               indeks = i;
               break;
           }  else indeks = 1;
       }
       FilmyCombo.setSelectedIndex(indeks);
    }//GEN-LAST:event_textField2TextValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WypozyczalniaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WypozyczalniaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WypozyczalniaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WypozyczalniaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WypozyczalniaGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdresWpisz;
    private javax.swing.JTextField CenaWpisz;
    private javax.swing.JTextField DataWWpisz;
    private javax.swing.JTextField DataZWpisz;
    private javax.swing.JButton DodajFilm;
    private javax.swing.JButton DodajKLienta;
    private javax.swing.JButton DodajWypozyczenie;
    private javax.swing.JButton DodajZwrot;
    private javax.swing.JPanel Film;
    private javax.swing.JComboBox FilmyCombo;
    private javax.swing.JTextField GatunekWpisz;
    private javax.swing.JTextField ImieWpisz;
    private javax.swing.JComboBox KlienciCombo;
    private javax.swing.JList ListaWypozyczenia;
    private javax.swing.JList ListaZwroty;
    private javax.swing.JTextField NazwaWpisz;
    private javax.swing.JTextField NazwiskoWpisz;
    private javax.swing.JTextField RezyserWpisz;
    private javax.swing.JTextField RokWpisz;
    private javax.swing.JTextField TelefonWpisz;
    private javax.swing.JTextField WiekWpisz;
    private javax.swing.JTextField dostepneWpisz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    // End of variables declaration//GEN-END:variables
}
